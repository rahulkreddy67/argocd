{{- if and .Release.IsUpgrade .Values.crd.enabled }}
apiVersion: batch/v1
kind: Job
metadata:
  name: {{ .Release.Name }}-upgrade-hook-job
  labels:
    {{- include "kubeblocks.labels" . | nindent 4 }}
  annotations:
    "helm.sh/hook": pre-upgrade
    "helm.sh/hook-delete-policy": "before-hook-creation,hook-succeeded"
spec:
  ttlSecondsAfterFinished: 3600
  template:
    metadata:
      name: {{ .Release.Name }}-upgrade
      labels:
        {{- include "kubeblocks.labels" . | nindent 8 }}
    spec:
      {{- with .Values.image.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "kubeblocks.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      restartPolicy: OnFailure
      containers:
        - name: pre-upgrade-job
          image: "{{ .Values.image.registry | default "docker.io" }}/{{ .Values.image.tools.repository }}:{{ .Values.image.tag | default .Chart.Version }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          command:
            - /bin/helm_hook
          args:
            - --version={{ .Chart.Version }}
            - --namespace={{ .Release.Namespace }}
        - name: delete-ops
          image: "{{ .Values.image.registry | default "docker.io" }}/{{ .Values.image.tools.repository }}:{{ .Values.image.tag | default .Chart.Version }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          command:
            - sh
            - -c
            - |
              opsDefs=$(kubectl get opsdefinitions.apps.kubeblocks.io | awk 'NR>1 {print $1}')
              for opsDef in ${opsDefs}; do
                if [ $(kubectl get opsdefinitions.apps.kubeblocks.io ${opsDef} -oyaml | grep "  jobSpec:") ]; then
                  kubectl patch opsdefinitions.apps.kubeblocks.io ${opsDef} -p '{"metadata":{"finalizers":null}}' --type=merge
                  kubectl delete opsdefinitions.apps.kubeblocks.io ${opsDef}
                elif [ ! $(kubectl get opsdefinitions.apps.kubeblocks.io ${opsDef} -oyaml | grep "  actions:") ]; then
                  kubectl patch opsdefinitions.apps.kubeblocks.io ${opsDef} --type=merge -p '{"spec":{"actions":[{"name":"mock","exec":{"podInfoExtractorName":"test","command":["echo 1"]}}]}}'
                fi
              done
      {{- with .Values.topologySpreadConstraints }}
      topologySpreadConstraints:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
{{- end }}