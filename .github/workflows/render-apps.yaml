name: Helmfile Render
on:
  push:
    branches:
      - main
  workflow_dispatch:
  
  pull_request:
    branches:
      - main
jobs:
  helmfile-render:
    runs-on: ubuntu-latest
    steps:
      # Checkout the repo
      - name: Checkout repository
        uses: actions/checkout@v2
        
      # Set up Helm and Helmfile
      - name: Install Helm and Helmfile
        run: |
          curl https://raw.githubusercontent.com/helm/helm/main/scripts/get-helm-3 | bash
          #wget wget https://github.com/helmfile/helmfile/releases/download/v0.170.1/helmfile_0.170.1_linux_amd64.tar.gz
          curl -Lo helmfile.tar.gz https://github.com/helmfile/helmfile/releases/download/v0.170.1/helmfile_0.170.1_linux_amd64.tar.gz
          tar -zxvf helmfile.tar.gz  # Extract the tarball
          chmod +x helmfile
          sudo mv helmfile /usr/local/bin/
        
      # Render Helmfile for all apps
      - name: Render all apps
        run: |
          for dir in */; do
            if [[ -f "$dir/helmfile.yaml" ]]; then
              echo "Rendering Helmfile in $dir"
              cd "$dir"
              mkdir -p manifests
              helmfile -f helmfile.yaml template > manifests/application.yaml
              cd ..
            fi
          done
      - name: Verify rendered files
        run: |
          for dir in */; do
            if [[ -f "$dir/helmfile.yaml" ]]; then
              echo "Checking if application.yaml exists in $dir"
              ls -R "$dir"
            fi
          done
          
      - name: Set up Git identity
        run: |
          git config --global user.name "Rahul Kancharakuntla"
          git config --global user.email "rahulkreddy67@gmail.com"

      - name: Commit rendered manifests
        env:
          GH_TOKEN: ${{ secrets.GH_TOKEN_FOR_ARGOCD }}
        run: |
          for dir in */; do
            if [[ -f "$dir/helmfile.yaml" ]]; then
              git add "$dir/manifests/application.yaml"
              git commit -m "Update application.yaml for $(basename $dir)"
              git remote set-url --push origin https://rahulkreddy67:${GH_TOKEN}/argodcd.git
              git push
            fi
          done
        continue-on-error: true
